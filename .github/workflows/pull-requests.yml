name: Pull Request
on: [pull_request]

jobs:
  cache-pnpm-store:
    name: Install everything with PNPM and cache it
    secrets: inherit
    uses: ./.github/workflows/cache-pnpm-install.yml

  deploy-branch:
    name: Deploy Branch Editor
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [cache-pnpm-store]
    env:
      UTOPIA_SHA: ${{ github.sha }}
      AUTH0_CLIENT_ID: A9v9iuucCnFzkb1OzGkbAvi3cSF8kQtu
      AUTH0_ENDPOINT: utopia-staging.us.auth0.com
    steps:
      # Create a comment immediately so that the first comment can be used as a "Try me" link
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc-initial
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Try me
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ success() || failure() }}
        with:
          comment-id: ${{ steps.fc-initial.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ## Try me
            (building...)
      # Gets the branch that this PR is targeting and replaces forward slashes in the name with hyphens.
      # So that later steps can produce a bundle incorporating that into the name and upload it.
      - name: Extract branch name
        shell: bash
        run: |
          FIXED_REF="${GITHUB_HEAD_REF////-}"
          echo "##[set-output name=branch;]$FIXED_REF"
        id: extract_branch
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Cache .pnpm-store
        uses: actions/cache@v2
        with:
          path: ${{ needs.cache-pnpm-store.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-captured-location
      - name: Install nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/6120ac5cd201f6cb593d1b80e861be0342495be9.tar.gz
      - name: Build Editor
        if: steps.cache-editor-tests.outputs.cache-hit != 'true'
        run: |
          nix-shell --arg includeServerBuildSupport false --arg includeRunLocallySupport false --run build-editor-branches-ci
      - name: Send webpack stats to RelativeCI
        uses: relative-ci/agent-action@v1.1.0
        with:
          webpackStatsFile: editor/lib/branches-stats.json
          key: ${{ secrets.RELATIVE_CI_KEY }}
          debug: false
      - name: Delete node_modules
        working-directory: editor/
        run: |
          rm -rf ./node_modules
          cd ../utopia-api
          rm -rf ./node_modules
          cd ../website-next
          rm -rf ./node_modules
          cd ../utopia-vscode-extension
          rm -rf ./node_modules
          cd ../utopia-vscode-common
          rm -rf ./node_modules
      - name: Create Editor Bundle
        working-directory: editor/lib/
        run: |
          tar -czvf ../${{ steps.extract_branch.outputs.branch }}.tar.gz *
      # Update the "Try me" comment with the new status. We have to find it again because it
      # might not have existed during the previous search
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Try me
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ success() || failure() }}
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ## Try me
            (deploying...)
      - name: Upload Editor Bundle
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl private --exclude '*' --include 'editor/${{ steps.extract_branch.outputs.branch }}.tar.gz'
        env:
          AWS_S3_BUCKET: ${{ secrets.STAGING_BUNDLE_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_BUNDLE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_BUNDLE_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.STAGING_BUNDLE_REGION }}
      - name: Flush Staging Branch Editor Bundle
        shell: bash
        run: |
          curl -s -o /dev/null -w "FLUSH STAGING HTTP RESPONSE CODE: %{http_code}" -X DELETE 'https://${{ secrets.STAGING_SERVER }}/internal/branch?branch_name=${{ steps.extract_branch.outputs.branch }}'
      # Update the "Try me" comment with the actual link
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        if: ${{ success() || failure() }}
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ## [Try me](https://${{ secrets.STAGING_SERVER }}/p/?branch_name=${{ steps.extract_branch.outputs.branch }})

  comments-test:
    name: Run Comments Tests
    timeout-minutes: 12
    runs-on: ubuntu-latest
    needs: [deploy-branch, cache-pnpm-store]
    env:
      UTOPIA_SHA: ${{ github.sha }}
      AUTH0_CLIENT_ID: A9v9iuucCnFzkb1OzGkbAvi3cSF8kQtu
      AUTH0_ENDPOINT: utopia-staging.us.auth0.com
    steps:
      # Gets the branch that this PR is targeting and replaces forward slashes in the name with hyphens.
      # So that later steps can produce a bundle incorporating that into the name and upload it.
      - name: Extract branch name
        shell: bash
        run: |
          FIXED_REF="${GITHUB_HEAD_REF////-}"
          echo "##[set-output name=branch;]$FIXED_REF"
        id: extract_branch
      - name: Install nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/6120ac5cd201f6cb593d1b80e861be0342495be9.tar.gz
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Cache .pnpm-store
        uses: actions/cache@v2
        with:
          path: ${{ needs.cache-pnpm-store.outputs.pnpm-store-path }}
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}-captured-location
      - name: Build Comments Tests
        run: |
          nix-shell --arg includeServerBuildSupport false --arg includeRunLocallySupport false --run "build-puppeteer-tests"
      - name: Run Comments Test
        id: run-comments-test
        env:
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
          BASE_URL: 'https://utopia.fish'
        run: |
          nix-shell --arg includeServerBuildSupport false --arg includeRunLocallySupport false --run "xvfb-run --server-args='-screen 0 1920x1080x24 -ac -nolisten tcp -dpi 96 +extension RANDR' run-comments-test"
