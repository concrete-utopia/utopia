// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSX parser should parse out dot-notation element names 1`] = `
Object {
  "react": Object {
    "importedAs": "React",
    "importedFromWithin": Array [],
    "importedWithName": null,
  },
  "utopia-api": Object {
    "importedAs": "Utopia",
    "importedFromWithin": Array [],
    "importedWithName": null,
  },
}
`;

exports[`JSX parser should parse out dot-notation element names 2`] = `
Array [
  Object {
    "importStarAs": true,
    "importWithName": false,
    "imports": Array [],
    "module": "react",
    "rawCode": "import * as React from 'react'",
    "type": "IMPORT_STATEMENT",
  },
  Object {
    "rawCode": "
",
    "type": "UNPARSED_CODE",
  },
  Object {
    "importStarAs": true,
    "importWithName": false,
    "imports": Array [],
    "module": "utopia-api",
    "rawCode": "import * as Utopia from 'utopia-api'",
    "type": "IMPORT_STATEMENT",
  },
  Object {
    "rawCode": "

",
    "type": "UNPARSED_CODE",
  },
  Object {
    "arbitraryJSBlock": null,
    "blockOrExpression": "block",
    "declarationSyntax": "var",
    "isFunction": true,
    "name": "App",
    "param": Object {
      "boundParam": Object {
        "defaultExpression": null,
        "paramName": "props",
        "type": "REGULAR_PARAM",
      },
      "dotDotDotToken": false,
      "type": "PARAM",
    },
    "propsUsed": Array [],
    "returnStatementComments": Object {
      "leadingComments": Array [],
      "trailingComments": Array [],
    },
    "rootElement": Object {
      "children": Array [
        Object {
          "definedElsewhere": Array [
            "React",
            "utopiaCanvasJSXLookup",
          ],
          "elementsWithin": Object {
            "bbb": Object {
              "children": Array [],
              "name": Object {
                "baseVariable": "div",
                "propertyPath": Object {
                  "propertyElements": Array [],
                },
              },
              "props": Array [
                Object {
                  "comments": Object {
                    "leadingComments": Array [],
                    "trailingComments": Array [],
                  },
                  "key": "data-uid",
                  "type": "JSX_ATTRIBUTES_ENTRY",
                  "value": Object {
                    "comments": Object {
                      "leadingComments": Array [],
                      "trailingComments": Array [],
                    },
                    "type": "ATTRIBUTE_VALUE",
                    "uniqueID": "",
                    "value": "bbb",
                  },
                },
              ],
              "type": "JSX_ELEMENT",
              "uid": "bbb",
            },
          },
          "javascript": "<div data-uid='bbb' />;",
          "originalJavascript": "<div data-uid='bbb' />",
          "sourceMap": Object {
            "file": "code.tsx",
            "mappings": "OAAA;AAAA;AAAA",
            "names": Array [],
            "sources": Array [
              "code.tsx",
            ],
            "sourcesContent": Array [
              "import * as React from 'react'
import * as Utopia from 'utopia-api'

export var App = (props) => {
  return (
    <Utopia.View data-uid='aaa'>
      {<div data-uid='bbb' />}
    </Utopia.View>
  )
}

export var storyboard = (props) => {
  return (
    <Storyboard data-uid='utopia-storyboard-uid'>
      <Scene
        style={{ left: 0, top: 0, width: 400, height: 400 }}
        data-uid='scene-aaa'
      >
        <App
          data-uid='app-entity'
          style={{ bottom: 0, left: 0, right: 0, top: 0 }}
        />
      </Scene>
    </Storyboard>
  )
}
",
            ],
            "version": 3,
          },
          "transpiledJavascript": "return utopiaCanvasJSXLookup(\\"bbb\\", {
  callerThis: this
});",
          "type": "ATTRIBUTE_OTHER_JAVASCRIPT",
          "uniqueID": "",
        },
      ],
      "name": Object {
        "baseVariable": "Utopia",
        "propertyPath": Object {
          "propertyElements": Array [
            "View",
          ],
        },
      },
      "props": Array [
        Object {
          "comments": Object {
            "leadingComments": Array [],
            "trailingComments": Array [],
          },
          "key": "data-uid",
          "type": "JSX_ATTRIBUTES_ENTRY",
          "value": Object {
            "comments": Object {
              "leadingComments": Array [],
              "trailingComments": Array [],
            },
            "type": "ATTRIBUTE_VALUE",
            "uniqueID": "",
            "value": "aaa",
          },
        },
      ],
      "type": "JSX_ELEMENT",
      "uid": "aaa",
    },
    "type": "UTOPIA_JSX_COMPONENT",
    "usedInReactDOMRender": false,
  },
  Object {
    "rawCode": "

",
    "type": "UNPARSED_CODE",
  },
  Object {
    "definedElsewhere": Array [
      "React",
      "Storyboard",
      "Scene",
      "App",
      "utopiaCanvasJSXLookup",
    ],
    "definedWithin": Array [
      "storyboard",
    ],
    "elementsWithin": Object {},
    "javascript": "export var storyboard = (props) => {
  return (
    <Storyboard data-uid='utopia-storyboard-uid'>
      <Scene
        style={{ left: 0, top: 0, width: 400, height: 400 }}
        data-uid='scene-aaa'
      >
        <App
          data-uid='app-entity'
          style={{ bottom: 0, left: 0, right: 0, top: 0 }}
        />
      </Scene>
    </Storyboard>
  )
}",
    "sourceMap": Object {
      "file": "code.tsx",
      "mappings": "AAWQA,IAAIC,UAAUC,GAAGC,SAAbF,UAAaE,CAACC,KAADD,EAAWE;AACjCC,SACEC,oBAACC,UAADD;AAAYE,gBAASC;AAArBH,KACEA,oBAACI,KAADJ;AACEK,IAAAA,KAAKC,EAAER;AAAES,MAAAA,IAAIC,EAAEC,CAARX;AAAWY,MAAAA,GAAGF,EAAEC,CAAhBX;AAAmBa,MAAAA,KAAKH,EAAEI,GAA1Bd;AAA+Be,MAAAA,MAAML,EAAEI;AAAvCd,KADTE;AAEEE,gBAASC;AAFXH,KAIEA,oBAACc,GAADd;AACEE,gBAASC,YADXH;AAEEK,IAAAA,KAAKC,EAAER;AAAEiB,MAAAA,MAAMP,EAAEC,CAAVX;AAAaS,MAAAA,IAAIC,EAAEC,CAAnBX;AAAsBkB,MAAAA,KAAKR,EAAEC,CAA7BX;AAAgCY,MAAAA,GAAGF,EAAEC;AAArCX;AAFTE,IAJFA,CADFA,CADFD;AAaFkB,CAdOxB",
      "names": Array [
        "var",
        "storyboard",
        " ",
        "(",
        "props",
        "{",
        "return",
        "<",
        "Storyboard",
        "data",
        "'",
        "Scene",
        "style",
        "=",
        "left",
        ":",
        "0",
        "top",
        "width",
        "400",
        "height",
        "App",
        "bottom",
        "right",
        "}",
      ],
      "sources": Array [
        "code.tsx",
      ],
      "sourcesContent": Array [
        "import * as React from 'react'
import * as Utopia from 'utopia-api'

export var App = (props) => {
  return (
    <Utopia.View data-uid='aaa'>
      {<div data-uid='bbb' />}
    </Utopia.View>
  )
}

export var storyboard = (props) => {
  return (
    <Storyboard data-uid='utopia-storyboard-uid'>
      <Scene
        style={{ left: 0, top: 0, width: 400, height: 400 }}
        data-uid='scene-aaa'
      >
        <App
          data-uid='app-entity'
          style={{ bottom: 0, left: 0, right: 0, top: 0 }}
        />
      </Scene>
    </Storyboard>
  )
}
",
      ],
      "version": 3,
    },
    "transpiledJavascript": "var storyboard = function storyboard(props) {
  return React.createElement(Storyboard, {
    \\"data-uid\\": \\"utopia-storyboard-uid\\"
  }, React.createElement(Scene, {
    style: {
      left: 0,
      top: 0,
      width: 400,
      height: 400
    },
    \\"data-uid\\": \\"scene-aaa\\"
  }, React.createElement(App, {
    \\"data-uid\\": \\"app-entity\\",
    style: {
      bottom: 0,
      left: 0,
      right: 0,
      top: 0
    }
  })));
};
return { storyboard: storyboard };",
    "type": "ARBITRARY_JS_BLOCK",
    "uniqueID": "",
  },
  Object {
    "rawCode": "
",
    "type": "UNPARSED_CODE",
  },
]
`;
