// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSX parser circularly referenced arbitrary blocks parse and produce a combined block 1`] = `
Object {
  "combinedTopLevelArbitraryBlock": Object {
    "comments": Object {
      "leadingComments": Array [],
      "trailingComments": Array [],
    },
    "definedElsewhere": Array [],
    "definedWithin": Array [
      "a",
      "b",
    ],
    "javascript": "function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}
function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}",
    "sourceMap": Object {
      "file": "code.tsx",
      "mappings": "AAICA,SAASC,CAATD,CAAWE,CAAXF,EAAcG;AACZC,MAAIF,CAACG,IAAIC,CAATF,EAAYD;AACVI,WAAOD,CAAPC;AACDF,GAFDD,MAEOD;AACLI,WAAOC,CAACC,CAACP,CAACG,GAAGK,CAALD,CAARF;AACDI;AAWFA;;AAEDX,SAASQ,CAATR,CAAWE,CAAXF,EAAcG;AACZC,MAAIF,CAACG,IAAIC,CAATF,EAAYD;AACVI,WAAOD,CAAPC;AACDF,GAFDD,MAEOD;AACLI,WAAON,CAACQ,CAACP,CAACG,GAAGK,CAALD,CAARF;AACDI;AACHC",
      "names": Array [
        "function",
        "a",
        "n",
        "{",
        "if",
        " ",
        "0",
        "return",
        "b",
        "(",
        "1",
        "
",
        "}",
      ],
      "sources": Array [
        "code.tsx",
      ],
      "sourcesContent": Array [
        "/** @jsx jsx */
import * as React from 'react'
import { Scene, Storyboard, jsx } from 'utopia-api'

function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}

export var App = (props) => {
  return (
    <div
      data-uid='aaa'
      style={{ width: '100%', height: '100%', backgroundColor: '#FFFFFF' }}
      layout={{ layoutSystem: 'pinSystem' }}
    >{b(5)} - {a(5)}</div>
  )
}

function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}

export var storyboard = (
  <Storyboard data-uid='bbb' layout={{ layoutSystem: 'pinSystem' }}>
    <Scene
      data-uid='ccc'
      component={App}
      props={{}}
      style={{ position: 'absolute', left: 0, top: 0, width: 375, height: 812 }}
    />
  </Storyboard>
)",
      ],
      "version": 3,
    },
    "transpiledJavascript": "function a(n) {
  if (n <= 0) {
    return 0;
  } else {
    return b(n - 1);
  }
}

function b(n) {
  if (n <= 0) {
    return 0;
  } else {
    return a(n - 1);
  }
}
return { a: a, b: b };",
    "type": "ARBITRARY_JS_BLOCK",
    "uniqueID": "",
  },
  "exportsDetail": Object {
    "defaultExport": null,
    "namedExports": Object {
      "App": Object {
        "type": "EXPORT_DETAIL_MODIFIER",
      },
      "storyboard": Object {
        "type": "EXPORT_DETAIL_MODIFIER",
      },
    },
  },
  "highlightBounds": Object {
    "aaa": Object {
      "endCol": 26,
      "endLine": 18,
      "startCol": 4,
      "startLine": 14,
      "uid": "aaa",
    },
    "bbb": Object {
      "endCol": 15,
      "endLine": 38,
      "startCol": 2,
      "startLine": 31,
      "uid": "bbb",
    },
    "ccc": Object {
      "endCol": 6,
      "endLine": 37,
      "startCol": 4,
      "startLine": 32,
      "uid": "ccc",
    },
  },
  "imports": Object {
    "react": Object {
      "comments": Object {
        "leadingComments": Array [
          Object {
            "comment": "* @jsx jsx ",
            "pos": 0,
            "rawText": "/** @jsx jsx */",
            "trailingNewLine": true,
            "type": "MULTI_LINE_COMMENT",
          },
        ],
        "trailingComments": Array [],
      },
      "importedAs": "React",
      "importedFromWithin": Array [],
      "importedWithName": null,
    },
    "utopia-api": Object {
      "comments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "importedAs": null,
      "importedFromWithin": Array [
        Object {
          "alias": "Scene",
          "name": "Scene",
        },
        Object {
          "alias": "Storyboard",
          "name": "Storyboard",
        },
        Object {
          "alias": "jsx",
          "name": "jsx",
        },
      ],
      "importedWithName": null,
    },
  },
  "jsxFactoryFunction": "jsx",
  "topLevelElements": Array [
    Object {
      "importStarAs": true,
      "importWithName": false,
      "imports": Array [],
      "module": "react",
      "rawCode": "/** @jsx jsx */
import * as React from 'react'",
      "type": "IMPORT_STATEMENT",
    },
    Object {
      "importStarAs": false,
      "importWithName": false,
      "imports": Array [
        "Scene",
        "Storyboard",
        "jsx",
      ],
      "module": "utopia-api",
      "rawCode": "
import { Scene, Storyboard, jsx } from 'utopia-api'",
      "type": "IMPORT_STATEMENT",
    },
    Object {
      "comments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "definedElsewhere": Array [
        "b",
      ],
      "definedWithin": Array [
        "a",
      ],
      "javascript": "function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}",
      "sourceMap": Object {
        "file": "code.tsx",
        "mappings": "AAICA,SAASC,CAATD,CAAWE,CAAXF,EAAcG;AACZC,MAAIF,CAACG,IAAIC,CAATF,EAAYD;AACVI,WAAOD,CAAPC;AACDF,GAFDD,MAEOD;AACLI,WAAOC,CAACC,CAACP,CAACG,GAAGK,CAALD,CAARF;AACDI;AACHC",
        "names": Array [
          "function",
          "a",
          "n",
          "{",
          "if",
          " ",
          "0",
          "return",
          "b",
          "(",
          "1",
          "
",
          "}",
        ],
        "sources": Array [
          "code.tsx",
        ],
        "sourcesContent": Array [
          "/** @jsx jsx */
import * as React from 'react'
import { Scene, Storyboard, jsx } from 'utopia-api'

function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}

export var App = (props) => {
  return (
    <div
      data-uid='aaa'
      style={{ width: '100%', height: '100%', backgroundColor: '#FFFFFF' }}
      layout={{ layoutSystem: 'pinSystem' }}
    >{b(5)} - {a(5)}</div>
  )
}

function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}

export var storyboard = (
  <Storyboard data-uid='bbb' layout={{ layoutSystem: 'pinSystem' }}>
    <Scene
      data-uid='ccc'
      component={App}
      props={{}}
      style={{ position: 'absolute', left: 0, top: 0, width: 375, height: 812 }}
    />
  </Storyboard>
)",
        ],
        "version": 3,
      },
      "transpiledJavascript": "function a(n) {
  if (n <= 0) {
    return 0;
  } else {
    return b(n - 1);
  }
}
return { a: a };",
      "type": "ARBITRARY_JS_BLOCK",
      "uniqueID": "",
    },
    Object {
      "arbitraryJSBlock": null,
      "blockOrExpression": "block",
      "comments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "declarationSyntax": "var",
      "isFunction": true,
      "name": "App",
      "param": Object {
        "boundParam": Object {
          "defaultExpression": null,
          "paramName": "props",
          "type": "REGULAR_PARAM",
        },
        "dotDotDotToken": false,
        "type": "PARAM",
      },
      "propsUsed": Array [],
      "returnStatementComments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "rootElement": Object {
        "children": Array [
          Object {
            "definedElsewhere": Array [
              "b",
            ],
            "elementsWithin": Object {},
            "javascript": "b(5);",
            "originalJavascript": "b(5)",
            "sourceMap": Object {
              "file": "code.tsx",
              "mappings": "OAAE,CAAC,CAAH,CAAG,CAAFA",
              "names": Array [
                "b",
              ],
              "sources": Array [
                "code.tsx",
              ],
              "sourcesContent": Array [
                "/** @jsx jsx */
import * as React from 'react'
import { Scene, Storyboard, jsx } from 'utopia-api'

function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}

export var App = (props) => {
  return (
    <div
      data-uid='aaa'
      style={{ width: '100%', height: '100%', backgroundColor: '#FFFFFF' }}
      layout={{ layoutSystem: 'pinSystem' }}
    >{b(5)} - {a(5)}</div>
  )
}

function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}

export var storyboard = (
  <Storyboard data-uid='bbb' layout={{ layoutSystem: 'pinSystem' }}>
    <Scene
      data-uid='ccc'
      component={App}
      props={{}}
      style={{ position: 'absolute', left: 0, top: 0, width: 375, height: 812 }}
    />
  </Storyboard>
)",
              ],
              "version": 3,
            },
            "transpiledJavascript": "return b(5);",
            "type": "JSX_ARBITRARY_BLOCK",
            "uniqueID": "",
          },
          Object {
            "text": " - ",
            "type": "JSX_TEXT_BLOCK",
            "uniqueID": "",
          },
          Object {
            "definedElsewhere": Array [
              "a",
            ],
            "elementsWithin": Object {},
            "javascript": "a(5);",
            "originalJavascript": "a(5)",
            "sourceMap": Object {
              "file": "code.tsx",
              "mappings": "OAAE,CAAC,CAAH,CAAG,CAAFA",
              "names": Array [
                "a",
              ],
              "sources": Array [
                "code.tsx",
              ],
              "sourcesContent": Array [
                "/** @jsx jsx */
import * as React from 'react'
import { Scene, Storyboard, jsx } from 'utopia-api'

function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}

export var App = (props) => {
  return (
    <div
      data-uid='aaa'
      style={{ width: '100%', height: '100%', backgroundColor: '#FFFFFF' }}
      layout={{ layoutSystem: 'pinSystem' }}
    >{b(5)} - {a(5)}</div>
  )
}

function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}

export var storyboard = (
  <Storyboard data-uid='bbb' layout={{ layoutSystem: 'pinSystem' }}>
    <Scene
      data-uid='ccc'
      component={App}
      props={{}}
      style={{ position: 'absolute', left: 0, top: 0, width: 375, height: 812 }}
    />
  </Storyboard>
)",
              ],
              "version": 3,
            },
            "transpiledJavascript": "return a(5);",
            "type": "JSX_ARBITRARY_BLOCK",
            "uniqueID": "",
          },
        ],
        "name": Object {
          "baseVariable": "div",
          "propertyPath": Object {
            "propertyElements": Array [],
          },
        },
        "props": Object {
          "data-uid": Object {
            "comments": Object {
              "leadingComments": Array [],
              "trailingComments": Array [],
            },
            "type": "ATTRIBUTE_VALUE",
            "value": "aaa",
          },
          "layout": Object {
            "comments": Object {
              "leadingComments": Array [],
              "trailingComments": Array [],
            },
            "type": "ATTRIBUTE_VALUE",
            "value": Object {
              "layoutSystem": "pinSystem",
            },
          },
          "style": Object {
            "comments": Object {
              "leadingComments": Array [],
              "trailingComments": Array [],
            },
            "type": "ATTRIBUTE_VALUE",
            "value": Object {
              "backgroundColor": "#FFFFFF",
              "height": "100%",
              "width": "100%",
            },
          },
        },
        "type": "JSX_ELEMENT",
      },
      "type": "UTOPIA_JSX_COMPONENT",
      "usedInReactDOMRender": false,
    },
    Object {
      "comments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "definedElsewhere": Array [
        "a",
      ],
      "definedWithin": Array [
        "b",
      ],
      "javascript": "function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}",
      "sourceMap": Object {
        "file": "code.tsx",
        "mappings": "AAsBCA,SAASC,CAATD,CAAWE,CAAXF,EAAcG;AACZC,MAAIF,CAACG,IAAIC,CAATF,EAAYD;AACVI,WAAOD,CAAPC;AACDF,GAFDD,MAEOD;AACLI,WAAOC,CAACC,CAACP,CAACG,GAAGK,CAALD,CAARF;AACDI;AACHC",
        "names": Array [
          "function",
          "b",
          "n",
          "{",
          "if",
          " ",
          "0",
          "return",
          "a",
          "(",
          "1",
          "
",
          "}",
        ],
        "sources": Array [
          "code.tsx",
        ],
        "sourcesContent": Array [
          "/** @jsx jsx */
import * as React from 'react'
import { Scene, Storyboard, jsx } from 'utopia-api'

function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}

export var App = (props) => {
  return (
    <div
      data-uid='aaa'
      style={{ width: '100%', height: '100%', backgroundColor: '#FFFFFF' }}
      layout={{ layoutSystem: 'pinSystem' }}
    >{b(5)} - {a(5)}</div>
  )
}

function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}

export var storyboard = (
  <Storyboard data-uid='bbb' layout={{ layoutSystem: 'pinSystem' }}>
    <Scene
      data-uid='ccc'
      component={App}
      props={{}}
      style={{ position: 'absolute', left: 0, top: 0, width: 375, height: 812 }}
    />
  </Storyboard>
)",
        ],
        "version": 3,
      },
      "transpiledJavascript": "function b(n) {
  if (n <= 0) {
    return 0;
  } else {
    return a(n - 1);
  }
}
return { b: b };",
      "type": "ARBITRARY_JS_BLOCK",
      "uniqueID": "",
    },
    Object {
      "arbitraryJSBlock": null,
      "blockOrExpression": "parenthesized-expression",
      "comments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "declarationSyntax": "var",
      "isFunction": false,
      "name": "storyboard",
      "param": null,
      "propsUsed": Array [],
      "returnStatementComments": Object {
        "leadingComments": Array [],
        "trailingComments": Array [],
      },
      "rootElement": Object {
        "children": Array [
          Object {
            "children": Array [],
            "name": Object {
              "baseVariable": "Scene",
              "propertyPath": Object {
                "propertyElements": Array [],
              },
            },
            "props": Object {
              "component": Object {
                "definedElsewhere": Array [
                  "App",
                ],
                "javascript": "App",
                "sourceMap": Object {
                  "file": "code.tsx",
                  "mappings": "OAkCkBA",
                  "names": Array [
                    "App",
                  ],
                  "sources": Array [
                    "code.tsx",
                  ],
                  "sourcesContent": Array [
                    "/** @jsx jsx */
import * as React from 'react'
import { Scene, Storyboard, jsx } from 'utopia-api'

function a(n) {
  if (n <= 0) {
    return 0
  } else {
    return b(n - 1)
  }
}

export var App = (props) => {
  return (
    <div
      data-uid='aaa'
      style={{ width: '100%', height: '100%', backgroundColor: '#FFFFFF' }}
      layout={{ layoutSystem: 'pinSystem' }}
    >{b(5)} - {a(5)}</div>
  )
}

function b(n) {
  if (n <= 0) {
    return 0
  } else {
    return a(n - 1)
  }
}

export var storyboard = (
  <Storyboard data-uid='bbb' layout={{ layoutSystem: 'pinSystem' }}>
    <Scene
      data-uid='ccc'
      component={App}
      props={{}}
      style={{ position: 'absolute', left: 0, top: 0, width: 375, height: 812 }}
    />
  </Storyboard>
)",
                  ],
                  "version": 3,
                },
                "transpiledJavascript": "return App;",
                "type": "ATTRIBUTE_OTHER_JAVASCRIPT",
                "uniqueID": "",
              },
              "data-uid": Object {
                "comments": Object {
                  "leadingComments": Array [],
                  "trailingComments": Array [],
                },
                "type": "ATTRIBUTE_VALUE",
                "value": "ccc",
              },
              "props": Object {
                "comments": Object {
                  "leadingComments": Array [],
                  "trailingComments": Array [],
                },
                "type": "ATTRIBUTE_VALUE",
                "value": Object {},
              },
              "style": Object {
                "comments": Object {
                  "leadingComments": Array [],
                  "trailingComments": Array [],
                },
                "type": "ATTRIBUTE_VALUE",
                "value": Object {
                  "height": 812,
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 375,
                },
              },
            },
            "type": "JSX_ELEMENT",
          },
        ],
        "name": Object {
          "baseVariable": "Storyboard",
          "propertyPath": Object {
            "propertyElements": Array [],
          },
        },
        "props": Object {
          "data-uid": Object {
            "comments": Object {
              "leadingComments": Array [],
              "trailingComments": Array [],
            },
            "type": "ATTRIBUTE_VALUE",
            "value": "bbb",
          },
          "layout": Object {
            "comments": Object {
              "leadingComments": Array [],
              "trailingComments": Array [],
            },
            "type": "ATTRIBUTE_VALUE",
            "value": Object {
              "layoutSystem": "pinSystem",
            },
          },
        },
        "type": "JSX_ELEMENT",
      },
      "type": "UTOPIA_JSX_COMPONENT",
      "usedInReactDOMRender": false,
    },
  ],
  "type": "PARSE_SUCCESS",
}
`;
