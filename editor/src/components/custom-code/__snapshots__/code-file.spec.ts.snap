// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Creating require function Creates require function for multi file build result 1`] = `
Object {
  "App": [Function],
  "canvasMetadata": Object {
    "elementMetadata": Object {},
    "nodeMetadata": Object {},
    "scenes": Array [
      Object {
        "component": "App",
        "container": Object {
          "layoutSystem": "pinSystem",
        },
        "frame": Object {
          "height": 812,
          "left": 0,
          "top": 0,
          "width": 375,
        },
        "props": Object {
          "layout": Object {
            "bottom": 0,
            "left": 0,
            "right": 0,
            "top": 0,
          },
        },
      },
    ],
    "specialNodes": Array [],
  },
  "default": [Circular],
}
`;

exports[`Creating require function Creates require function for multi file build result 2`] = `
Object {
  "ComponentWithProps": [Function],
  "LABEL": "press me! ðŸ˜‰",
  "default": [Function],
}
`;

exports[`Creating require function Creates require function for single file build result 1`] = `
Object {
  "App": [Function],
  "canvasMetadata": Object {
    "elementMetadata": Object {},
    "nodeMetadata": Object {},
    "scenes": Array [
      Object {
        "component": "App",
        "container": Object {
          "layoutSystem": "pinSystem",
        },
        "frame": Object {
          "height": 812,
          "left": 0,
          "top": 0,
          "width": 375,
        },
        "props": Object {
          "layout": Object {
            "bottom": 0,
            "left": 0,
            "right": 0,
            "top": 0,
          },
        },
      },
    ],
    "specialNodes": Array [],
  },
  "default": [Circular],
}
`;

exports[`Creating require function Require throws exception for import from non-existing module 1`] = `"Could not find dependency: 'foo' relative to '/'"`;

exports[`Creating require function Require throws exception for module code 1`] = `"booom"`;

exports[`Filling in SystemJS Fills System with data for multi file build result 1`] = `
Object {
  "App": [Function],
  "canvasMetadata": Object {
    "elementMetadata": Object {},
    "nodeMetadata": Object {},
    "scenes": Array [
      Object {
        "component": "App",
        "container": Object {
          "layoutSystem": "pinSystem",
        },
        "frame": Object {
          "height": 812,
          "left": 0,
          "top": 0,
          "width": 375,
        },
        "props": Object {
          "layout": Object {
            "bottom": 0,
            "left": 0,
            "right": 0,
            "top": 0,
          },
        },
      },
    ],
    "specialNodes": Array [],
  },
  "default": [Circular],
}
`;

exports[`Filling in SystemJS Fills System with data for multi file build result 2`] = `
Object {
  "ComponentWithProps": [Function],
  "LABEL": "press me! ðŸ˜‰",
  "default": [Function],
}
`;

exports[`Filling in SystemJS Fills System with data for single file build result 1`] = `
Object {
  "App": [Function],
  "canvasMetadata": Object {
    "elementMetadata": Object {},
    "nodeMetadata": Object {},
    "scenes": Array [
      Object {
        "component": "App",
        "container": Object {
          "layoutSystem": "pinSystem",
        },
        "frame": Object {
          "height": 812,
          "left": 0,
          "top": 0,
          "width": 375,
        },
        "props": Object {
          "layout": Object {
            "bottom": 0,
            "left": 0,
            "right": 0,
            "top": 0,
          },
        },
      },
    ],
    "specialNodes": Array [],
  },
  "default": [Circular],
}
`;

exports[`Generating codeResultCache Generates codeResultCache for build error 1`] = `
Object {
  "cache": Object {
    "/src/components.js": Object {
      "error": [TypeError: Cannot convert undefined or null to object],
      "errors": Array [
        Object {
          "codeSnippet": "  14 |         height: '100%',++
       ~~~~~~~~~~~~~~~~~~~~~~~~~
",
          "endColumn": 26,
          "endLine": 14,
          "errorCode": "TS1136",
          "fileName": "/src/components.js",
          "message": "Property assignment expected.",
          "passTime": null,
          "severity": "fatal",
          "source": "build",
          "startColumn": 24,
          "startLine": 14,
          "type": "Error",
        },
        Object {
          "codeSnippet": "  15 |       }}
       ~~~~~~~~
",
          "endColumn": 9,
          "endLine": 15,
          "errorCode": "TS1003",
          "fileName": "/src/components.js",
          "message": "Identifier expected.",
          "passTime": null,
          "severity": "fatal",
          "source": "build",
          "startColumn": 8,
          "startLine": 15,
          "type": "Error",
        },
      ],
      "exports": Object {},
      "sourceMap": null,
      "transpiledCode": null,
    },
  },
  "error": null,
  "exportsInfo": Array [
    Object {
      "code": "// component library
import * as React from 'react'
import { Text, View } from 'utopia-api'

export default (props) => (
  <View layout={props.layout} style={props.style} onMouseDown={props.onMouseDown}>
    <Text
      style={{ fontSize: 16, textAlign: 'center' }}
      text={props.text}
      layout={{
        left: 0,
        top: 10,
        width: '100%',
        height: '100%',++
      }}
      textSizing={'fixed'}
    />
  </View>
)

export const LABEL = 'press me! ðŸ˜‰'

export const ComponentWithProps = (props) => {
  return (
    <div
      style={{
        ...props.style,
        backgroundColor: props.pink ? 'hotpink' : 'transparent',
        whiteSpace: 'normal',
      }}
    >
      {(props.text + ' ').repeat(props.num)}
    </div>
  )
}

ComponentWithProps.propertyControls = {
  text: {
    type: 'string',
    title: 'Title',
    defaultValue: 'Change me',
  },
  num: {
    type: 'number',
    title: 'amount',
    defaultValue: 2,
  },
  pink: {
    type: 'boolean',
    title: 'Enabled',
    defaultValue: true,
  },
}

",
      "exportTypes": Object {
        "ComponentWithProps": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "{ (props: any): Element; propertyControls: { text: { type: string; title: string; defaultValue: string; }; num: { type: string; title: string; defaultValue: number; }; pink: { type: string; title: string; defaultValue: boolean; }; }; }",
        },
        "LABEL": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "\\"press me! ðŸ˜‰\\"",
        },
      },
      "filename": "/src/components.js",
    },
  ],
  "propertyControlsInfo": Object {
    "/src/components": Object {},
  },
  "requireFn": [Function],
  "skipDeepFreeze": true,
}
`;

exports[`Generating codeResultCache Generates codeResultCache for multi file build result 1`] = `
Object {
  "cache": Object {
    "/app.ui.js": Object {
      "error": null,
      "errors": Array [],
      "exports": Object {
        "App": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "(props: any) => Element",
          "value": [Function],
        },
        "canvasMetadata": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "{ specialNodes: any[]; nodeMetadata: {}; scenes: { component: string; frame: { height: number; left: number; width: number; top: number; }; props: { layout: { top: number; left: number; bottom: number; right: number; }; }; container: { ...; }; }[]; elementMetadata: {}; }",
          "value": Object {
            "elementMetadata": Object {},
            "nodeMetadata": Object {},
            "scenes": Array [
              Object {
                "component": "App",
                "container": Object {
                  "layoutSystem": "pinSystem",
                },
                "frame": Object {
                  "height": 812,
                  "left": 0,
                  "top": 0,
                  "width": 375,
                },
                "props": Object {
                  "layout": Object {
                    "bottom": 0,
                    "left": 0,
                    "right": 0,
                    "top": 0,
                  },
                },
              },
            ],
            "specialNodes": Array [],
          },
        },
        "default": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "any",
          "value": Object {
            "App": [Function],
            "canvasMetadata": Object {
              "elementMetadata": Object {},
              "nodeMetadata": Object {},
              "scenes": Array [
                Object {
                  "component": "App",
                  "container": Object {
                    "layoutSystem": "pinSystem",
                  },
                  "frame": Object {
                    "height": 812,
                    "left": 0,
                    "top": 0,
                    "width": 375,
                  },
                  "props": Object {
                    "layout": Object {
                      "bottom": 0,
                      "left": 0,
                      "right": 0,
                      "top": 0,
                    },
                  },
                },
              ],
              "specialNodes": Array [],
            },
            "default": [Circular],
          },
        },
      },
      "sourceMap": Object {
        "file": "app.ui.js",
        "mappings": ";;;;;;;;;;;;;;YAkDA,4BAAW,cAAc,GAAG;gBAC1B,YAAY,EAAE,EAAE;gBAChB,YAAY,EAAE,EAAE;gBAChB,MAAM,EAAE;oBACN;wBACE,SAAS,EAAE,KAAK;wBAChB,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE;wBACnD,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC3D,SAAS,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE;qBACzC;iBACF;gBACD,eAAe,EAAE,EAAE;aACpB,EAAA;YAGD,iBAAW,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE;gBACzB,OAAO,CACL,iBAAC,iBAAI,IACH,KAAK,kCAAO,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC,KAAE,eAAe,EAAE,kBAAU,CAAC,KAAK,CAAC,KAAK,KACxE,MAAM,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,cAC3B,KAAK,GACT,CACT,CAAA;YACH,CAAC,EAAA;QAED,CAAC",
        "names": Array [],
        "sourceRoot": "",
        "sources": Array [
          "../app.ui.js",
        ],
        "sourcesContent": Array [
          "/** @jsx jsx */
import * as React from 'react'
import {
  Ellipse,
  HelperFunctions,
  Image,
  NodeImplementations,
  Rectangle,
  Text,
  View,
  jsx,
} from 'utopia-api'
import {
  colorTheme,
  Button,
  Dialog,
  Icn,
  Icons,
  LargerIcons,
  FunctionIcons,
  MenuIcons,
  Isolator,
  TabComponent,
  Tooltip,
  ActionSheet,
  Avatar,
  ControlledTextArea,
  Title,
  H1,
  H2,
  H3,
  Subdued,
  InspectorSectionHeader,
  InspectorSubsectionHeader,
  FlexColumn,
  FlexRow,
  ResizableFlexColumn,
  PopupList,
  Section,
  SectionTitleRow,
  SectionBodyArea,
  UtopiaListSelect,
  UtopiaListItem,
  CheckboxInput,
  NumberInput,
  StringInput,
  OnClickOutsideHOC,
} from 'uuiui'

export var canvasMetadata = {
  specialNodes: [],
  nodeMetadata: {},
  scenes: [
    {
      component: 'App',
      frame: { height: 812, left: 0, width: 375, top: 0 },
      props: { layout: { top: 0, left: 0, bottom: 0, right: 0 } },
      container: { layoutSystem: 'pinSystem' },
    },
  ],
  elementMetadata: {},
}


export var App = (props) => {
  return (
    <View
      style={{ ...(props.style || {}), backgroundColor: colorTheme.white.value }}
      layout={{ layoutSystem: 'pinSystem' }}
      data-uid={'aaa'}
    ></View>
  )
}

",
        ],
        "version": 3,
      },
      "transpiledCode": "System.register([\\"utopia-api\\", \\"uuiui\\"], function (exports_1, context_1) {
    \\"use strict\\";
    var utopia_api_1, uuiui_1, canvasMetadata, App;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (utopia_api_1_1) {
                utopia_api_1 = utopia_api_1_1;
            },
            function (uuiui_1_1) {
                uuiui_1 = uuiui_1_1;
            }
        ],
        execute: function () {
            exports_1(\\"canvasMetadata\\", canvasMetadata = {
                specialNodes: [],
                nodeMetadata: {},
                scenes: [
                    {
                        component: 'App',
                        frame: { height: 812, left: 0, width: 375, top: 0 },
                        props: { layout: { top: 0, left: 0, bottom: 0, right: 0 } },
                        container: { layoutSystem: 'pinSystem' },
                    },
                ],
                elementMetadata: {},
            });
            exports_1(\\"App\\", App = (props) => {
                return (utopia_api_1.jsx(utopia_api_1.View, { style: Object.assign(Object.assign({}, (props.style || {})), { backgroundColor: uuiui_1.colorTheme.white.value }), layout: { layoutSystem: 'pinSystem' }, \\"data-uid\\": 'aaa' }));
            });
        }
    };
});
//# sourceMappingURL=app.ui.js.map",
    },
    "/public/preview.jsx": Object {
      "error": null,
      "errors": Array [],
      "exports": Object {
        "default": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "any",
          "value": Object {
            "default": [Circular],
          },
        },
      },
      "sourceMap": Object {
        "file": "preview.js",
        "mappings": ";;;;;;;;;;;;;;;;;YAIM,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,IAAI,IAAI,IAAI,EAAE;gBAClB,QAAQ,CAAC,MAAM,CAAC,oBAAC,YAAG,IAAC,KAAK,EAAE,EAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC,GAAI,EAAE,IAAI,CAAC,CAAC;aACjF;QAAA,CAAC",
        "names": Array [],
        "sourceRoot": "",
        "sources": Array [
          "../../public/preview.jsx",
        ],
        "sourcesContent": Array [
          "import * as React from \\"react\\";
import * as ReactDOM from \\"react-dom\\";
import { App } from \\"../app.ui\\";

const root = document.getElementById(\\"root\\");
if (root != null) {
ReactDOM.render(<App />, root);
}",
        ],
        "version": 3,
      },
      "transpiledCode": "System.register([\\"react\\", \\"react-dom\\", \\"../app.ui\\"], function (exports_1, context_1) {
    \\"use strict\\";
    var React, ReactDOM, app_ui_1, root;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (React_1) {
                React = React_1;
            },
            function (ReactDOM_1) {
                ReactDOM = ReactDOM_1;
            },
            function (app_ui_1_1) {
                app_ui_1 = app_ui_1_1;
            }
        ],
        execute: function () {
            root = document.getElementById(\\"root\\");
            if (root != null) {
                ReactDOM.render(React.createElement(app_ui_1.App, { style: { left: 0, top: 0, width: 375, height: 812 } }), root);
            }
        }
    };
});
//# sourceMappingURL=preview.js.map",
    },
    "/src/components.js": Object {
      "error": null,
      "errors": Array [],
      "exports": Object {
        "ComponentWithProps": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "{ (props: any): Element; propertyControls: { text: { type: string; title: string; defaultValue: string; }; num: { type: string; title: string; defaultValue: number; }; pink: { type: string; title: string; defaultValue: boolean; }; }; }",
          "value": [Function],
        },
        "LABEL": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "\\"press me! ðŸ˜‰\\"",
          "value": "press me! ðŸ˜‰",
        },
        "default": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "any",
          "value": [Function],
        },
      },
      "sourceMap": Object {
        "file": "components.js",
        "mappings": ";;;;;;;;;;;;;;iCAIe,CAAC,KAAK,EAAE,EAAE,CAAC,CACxB,oBAAC,iBAAI,IAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW;gBAC5E,oBAAC,iBAAI,IACH,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,EAC5C,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,MAAM,EAAE;wBACN,IAAI,EAAE,CAAC;wBACP,GAAG,EAAE,EAAE;wBACP,KAAK,EAAE,MAAM;wBACb,MAAM,EAAE,MAAM;qBACf,EACD,UAAU,EAAE,OAAO,GACnB,CACG,CACR;YAED,mBAAa,KAAK,GAAG,cAAc,EAAA;YAEnC,gCAAa,kBAAkB,GAAG,CAAC,KAAK,EAAE,EAAE;gBAC1C,OAAO,CACL,6BACE,KAAK,kCACA,KAAK,CAAC,KAAK,KACd,eAAe,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,EACvD,UAAU,EAAE,QAAQ,OAGrB,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CACjC,CACP,CAAA;YACH,CAAC,EAAA;YAED,kBAAkB,CAAC,gBAAgB,GAAG;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,OAAO;oBACd,YAAY,EAAE,WAAW;iBAC1B;gBACD,GAAG,EAAE;oBACH,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,QAAQ;oBACf,YAAY,EAAE,CAAC;iBAChB;gBACD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,SAAS;oBAChB,YAAY,EAAE,IAAI;iBACnB;aACF,CAAA;QAED,CAAC",
        "names": Array [],
        "sourceRoot": "",
        "sources": Array [
          "../../src/components.js",
        ],
        "sourcesContent": Array [
          "// component library
import * as React from 'react'
import { Text, View } from 'utopia-api'

export default (props) => (
  <View layout={props.layout} style={props.style} onMouseDown={props.onMouseDown}>
    <Text
      style={{ fontSize: 16, textAlign: 'center' }}
      text={props.text}
      layout={{
        left: 0,
        top: 10,
        width: '100%',
        height: '100%',
      }}
      textSizing={'fixed'}
    />
  </View>
)

export const LABEL = 'press me! ðŸ˜‰'

export const ComponentWithProps = (props) => {
  return (
    <div
      style={{
        ...props.style,
        backgroundColor: props.pink ? 'hotpink' : 'transparent',
        whiteSpace: 'normal',
      }}
    >
      {(props.text + ' ').repeat(props.num)}
    </div>
  )
}

ComponentWithProps.propertyControls = {
  text: {
    type: 'string',
    title: 'Title',
    defaultValue: 'Change me',
  },
  num: {
    type: 'number',
    title: 'amount',
    defaultValue: 2,
  },
  pink: {
    type: 'boolean',
    title: 'Enabled',
    defaultValue: true,
  },
}

",
        ],
        "version": 3,
      },
      "transpiledCode": "System.register([\\"react\\", \\"utopia-api\\"], function (exports_1, context_1) {
    \\"use strict\\";
    var React, utopia_api_1, LABEL, ComponentWithProps;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (React_1) {
                React = React_1;
            },
            function (utopia_api_1_1) {
                utopia_api_1 = utopia_api_1_1;
            }
        ],
        execute: function () {
            exports_1(\\"default\\", (props) => (React.createElement(utopia_api_1.View, { layout: props.layout, style: props.style, onMouseDown: props.onMouseDown },
                React.createElement(utopia_api_1.Text, { style: { fontSize: 16, textAlign: 'center' }, text: props.text, layout: {
                        left: 0,
                        top: 10,
                        width: '100%',
                        height: '100%',
                    }, textSizing: 'fixed' }))));
            exports_1(\\"LABEL\\", LABEL = 'press me! ðŸ˜‰');
            exports_1(\\"ComponentWithProps\\", ComponentWithProps = (props) => {
                return (React.createElement(\\"div\\", { style: Object.assign(Object.assign({}, props.style), { backgroundColor: props.pink ? 'hotpink' : 'transparent', whiteSpace: 'normal' }) }, (props.text + ' ').repeat(props.num)));
            });
            ComponentWithProps.propertyControls = {
                text: {
                    type: 'string',
                    title: 'Title',
                    defaultValue: 'Change me',
                },
                num: {
                    type: 'number',
                    title: 'amount',
                    defaultValue: 2,
                },
                pink: {
                    type: 'boolean',
                    title: 'Enabled',
                    defaultValue: true,
                },
            };
        }
    };
});
//# sourceMappingURL=components.js.map",
    },
  },
  "error": null,
  "exportsInfo": Array [
    Object {
      "code": "/** @jsx jsx */
import * as React from 'react'
import {
  Ellipse,
  HelperFunctions,
  Image,
  NodeImplementations,
  Rectangle,
  Text,
  View,
  jsx,
} from 'utopia-api'
import {
  colorTheme,
  Button,
  Dialog,
  Icn,
  Icons,
  LargerIcons,
  FunctionIcons,
  MenuIcons,
  Isolator,
  TabComponent,
  Tooltip,
  ActionSheet,
  Avatar,
  ControlledTextArea,
  Title,
  H1,
  H2,
  H3,
  Subdued,
  InspectorSectionHeader,
  InspectorSubsectionHeader,
  FlexColumn,
  FlexRow,
  ResizableFlexColumn,
  PopupList,
  Section,
  SectionTitleRow,
  SectionBodyArea,
  UtopiaListSelect,
  UtopiaListItem,
  CheckboxInput,
  NumberInput,
  StringInput,
  OnClickOutsideHOC,
} from 'uuiui'

export var canvasMetadata = {
  specialNodes: [],
  nodeMetadata: {},
  scenes: [
    {
      component: 'App',
      frame: { height: 812, left: 0, width: 375, top: 0 },
      props: { layout: { top: 0, left: 0, bottom: 0, right: 0 } },
      container: { layoutSystem: 'pinSystem' },
    },
  ],
  elementMetadata: {},
}


export var App = (props) => {
  return (
    <View
      style={{ ...(props.style || {}), backgroundColor: colorTheme.white.value }}
      layout={{ layoutSystem: 'pinSystem' }}
      data-uid={'aaa'}
    ></View>
  )
}

",
      "exportTypes": Object {
        "App": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "(props: any) => Element",
        },
        "canvasMetadata": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "{ specialNodes: any[]; nodeMetadata: {}; scenes: { component: string; frame: { height: number; left: number; width: number; top: number; }; props: { layout: { top: number; left: number; bottom: number; right: number; }; }; container: { ...; }; }[]; elementMetadata: {}; }",
        },
      },
      "filename": "/app.ui.js",
    },
    Object {
      "code": "// component library
import * as React from 'react'
import { Text, View } from 'utopia-api'

export default (props) => (
  <View layout={props.layout} style={props.style} onMouseDown={props.onMouseDown}>
    <Text
      style={{ fontSize: 16, textAlign: 'center' }}
      text={props.text}
      layout={{
        left: 0,
        top: 10,
        width: '100%',
        height: '100%',
      }}
      textSizing={'fixed'}
    />
  </View>
)

export const LABEL = 'press me! ðŸ˜‰'

export const ComponentWithProps = (props) => {
  return (
    <div
      style={{
        ...props.style,
        backgroundColor: props.pink ? 'hotpink' : 'transparent',
        whiteSpace: 'normal',
      }}
    >
      {(props.text + ' ').repeat(props.num)}
    </div>
  )
}

ComponentWithProps.propertyControls = {
  text: {
    type: 'string',
    title: 'Title',
    defaultValue: 'Change me',
  },
  num: {
    type: 'number',
    title: 'amount',
    defaultValue: 2,
  },
  pink: {
    type: 'boolean',
    title: 'Enabled',
    defaultValue: true,
  },
}

",
      "exportTypes": Object {
        "ComponentWithProps": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "{ (props: any): Element; propertyControls: { text: { type: string; title: string; defaultValue: string; }; num: { type: string; title: string; defaultValue: number; }; pink: { type: string; title: string; defaultValue: boolean; }; }; }",
        },
        "LABEL": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "\\"press me! ðŸ˜‰\\"",
        },
      },
      "filename": "/src/components.js",
    },
    Object {
      "code": "import * as React from \\"react\\";
import * as ReactDOM from \\"react-dom\\";
import { App } from \\"../app.ui\\";

const root = document.getElementById(\\"root\\");
if (root != null) {
ReactDOM.render(<App />, root);
}",
      "exportTypes": Object {},
      "filename": "/public/preview.jsx",
    },
  ],
  "propertyControlsInfo": Object {
    "/app.ui": Object {},
    "/public/preview": Object {},
    "/src/components": Object {
      "ComponentWithProps": Object {
        "num": Object {
          "defaultValue": 2,
          "title": "amount",
          "type": "number",
        },
        "pink": Object {
          "defaultValue": true,
          "title": "Enabled",
          "type": "boolean",
        },
        "text": Object {
          "defaultValue": "Change me",
          "title": "Title",
          "type": "string",
        },
      },
    },
  },
  "requireFn": [Function],
  "skipDeepFreeze": true,
}
`;

exports[`Generating codeResultCache Generates codeResultCache for single file build result 1`] = `
Object {
  "cache": Object {
    "/app.ui.js": Object {
      "error": null,
      "errors": Array [],
      "exports": Object {
        "App": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "(props: any) => Element",
          "value": [Function],
        },
        "canvasMetadata": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "{ specialNodes: any[]; nodeMetadata: {}; scenes: { component: string; frame: { height: number; left: number; width: number; top: number; }; props: { layout: { top: number; left: number; bottom: number; right: number; }; }; container: { ...; }; }[]; elementMetadata: {}; }",
          "value": Object {
            "elementMetadata": Object {},
            "nodeMetadata": Object {},
            "scenes": Array [
              Object {
                "component": "App",
                "container": Object {
                  "layoutSystem": "pinSystem",
                },
                "frame": Object {
                  "height": 812,
                  "left": 0,
                  "top": 0,
                  "width": 375,
                },
                "props": Object {
                  "layout": Object {
                    "bottom": 0,
                    "left": 0,
                    "right": 0,
                    "top": 0,
                  },
                },
              },
            ],
            "specialNodes": Array [],
          },
        },
        "default": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "any",
          "value": Object {
            "App": [Function],
            "canvasMetadata": Object {
              "elementMetadata": Object {},
              "nodeMetadata": Object {},
              "scenes": Array [
                Object {
                  "component": "App",
                  "container": Object {
                    "layoutSystem": "pinSystem",
                  },
                  "frame": Object {
                    "height": 812,
                    "left": 0,
                    "top": 0,
                    "width": 375,
                  },
                  "props": Object {
                    "layout": Object {
                      "bottom": 0,
                      "left": 0,
                      "right": 0,
                      "top": 0,
                    },
                  },
                },
              ],
              "specialNodes": Array [],
            },
            "default": [Circular],
          },
        },
      },
      "sourceMap": Object {
        "file": "app.ui.js",
        "mappings": ";;;;;;;;;;;;;;YAiDA,4BAAW,cAAc,GAAG;gBAC1B,YAAY,EAAE,EAAE;gBAChB,YAAY,EAAE,EAAE;gBAChB,MAAM,EAAE;oBACN;wBACE,SAAS,EAAE,KAAK;wBAChB,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE;wBACnD,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;wBAC3D,SAAS,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE;qBACzC;iBACF;gBACD,eAAe,EAAE,EAAE;aACpB,EAAA;YAED,iBAAW,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE;gBACzB,OAAO,CACL,iBAAC,iBAAI,IACH,KAAK,kCAAO,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC,KAAE,eAAe,EAAE,kBAAU,CAAC,KAAK,CAAC,KAAK,KACxE,MAAM,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,cAC3B,KAAK,GACT,CACT,CAAA;YACH,CAAC,EAAA;QAED,CAAC",
        "names": Array [],
        "sourceRoot": "",
        "sources": Array [
          "../app.ui.js",
        ],
        "sourcesContent": Array [
          "/** @jsx jsx */
import * as React from 'react'
import {
  Ellipse,
  HelperFunctions,
  Image,
  NodeImplementations,
  Rectangle,
  Text,
  View,
  jsx,
} from 'utopia-api'
import {
  colorTheme,
  Button,
  Dialog,
  Icn,
  Icons,
  LargerIcons,
  FunctionIcons,
  MenuIcons,
  Isolator,
  TabComponent,
  Tooltip,
  ActionSheet,
  Avatar,
  ControlledTextArea,
  Title,
  H1,
  H2,
  H3,
  Subdued,
  InspectorSectionHeader,
  InspectorSubsectionHeader,
  FlexColumn,
  FlexRow,
  ResizableFlexColumn,
  PopupList,
  Section,
  SectionTitleRow,
  SectionBodyArea,
  UtopiaListSelect,
  UtopiaListItem,
  CheckboxInput,
  NumberInput,
  StringInput,
  OnClickOutsideHOC,
} from 'uuiui'

export var canvasMetadata = {
  specialNodes: [],
  nodeMetadata: {},
  scenes: [
    {
      component: 'App',
      frame: { height: 812, left: 0, width: 375, top: 0 },
      props: { layout: { top: 0, left: 0, bottom: 0, right: 0 } },
      container: { layoutSystem: 'pinSystem' },
    },
  ],
  elementMetadata: {},
}

export var App = (props) => {
  return (
    <View
      style={{ ...(props.style || {}), backgroundColor: colorTheme.white.value }}
      layout={{ layoutSystem: 'pinSystem' }}
      data-uid={'aaa'}
    ></View>
  )
}

",
        ],
        "version": 3,
      },
      "transpiledCode": "System.register([\\"utopia-api\\", \\"uuiui\\"], function (exports_1, context_1) {
    \\"use strict\\";
    var utopia_api_1, uuiui_1, canvasMetadata, App;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [
            function (utopia_api_1_1) {
                utopia_api_1 = utopia_api_1_1;
            },
            function (uuiui_1_1) {
                uuiui_1 = uuiui_1_1;
            }
        ],
        execute: function () {
            exports_1(\\"canvasMetadata\\", canvasMetadata = {
                specialNodes: [],
                nodeMetadata: {},
                scenes: [
                    {
                        component: 'App',
                        frame: { height: 812, left: 0, width: 375, top: 0 },
                        props: { layout: { top: 0, left: 0, bottom: 0, right: 0 } },
                        container: { layoutSystem: 'pinSystem' },
                    },
                ],
                elementMetadata: {},
            });
            exports_1(\\"App\\", App = (props) => {
                return (utopia_api_1.jsx(utopia_api_1.View, { style: Object.assign(Object.assign({}, (props.style || {})), { backgroundColor: uuiui_1.colorTheme.white.value }), layout: { layoutSystem: 'pinSystem' }, \\"data-uid\\": 'aaa' }));
            });
        }
    };
});
//# sourceMappingURL=app.ui.js.map",
    },
  },
  "error": null,
  "exportsInfo": Array [
    Object {
      "code": "/** @jsx jsx */
import * as React from 'react'
import {
  Ellipse,
  HelperFunctions,
  Image,
  NodeImplementations,
  Rectangle,
  Text,
  View,
  jsx,
} from 'utopia-api'
import {
  colorTheme,
  Button,
  Dialog,
  Icn,
  Icons,
  LargerIcons,
  FunctionIcons,
  MenuIcons,
  Isolator,
  TabComponent,
  Tooltip,
  ActionSheet,
  Avatar,
  ControlledTextArea,
  Title,
  H1,
  H2,
  H3,
  Subdued,
  InspectorSectionHeader,
  InspectorSubsectionHeader,
  FlexColumn,
  FlexRow,
  ResizableFlexColumn,
  PopupList,
  Section,
  SectionTitleRow,
  SectionBodyArea,
  UtopiaListSelect,
  UtopiaListItem,
  CheckboxInput,
  NumberInput,
  StringInput,
  OnClickOutsideHOC,
} from 'uuiui'

export var canvasMetadata = {
  specialNodes: [],
  nodeMetadata: {},
  scenes: [
    {
      component: 'App',
      frame: { height: 812, left: 0, width: 375, top: 0 },
      props: { layout: { top: 0, left: 0, bottom: 0, right: 0 } },
      container: { layoutSystem: 'pinSystem' },
    },
  ],
  elementMetadata: {},
}

export var App = (props) => {
  return (
    <View
      style={{ ...(props.style || {}), backgroundColor: colorTheme.white.value }}
      layout={{ layoutSystem: 'pinSystem' }}
      data-uid={'aaa'}
    ></View>
  )
}

",
      "exportTypes": Object {
        "App": Object {
          "functionInfo": Array [
            Object {
              "memberInfo": Object {
                "members": Object {},
                "type": "any",
              },
              "name": "props",
            },
          ],
          "reactClassInfo": null,
          "type": "(props: any) => Element",
        },
        "canvasMetadata": Object {
          "functionInfo": null,
          "reactClassInfo": null,
          "type": "{ specialNodes: any[]; nodeMetadata: {}; scenes: { component: string; frame: { height: number; left: number; width: number; top: number; }; props: { layout: { top: number; left: number; bottom: number; right: number; }; }; container: { ...; }; }[]; elementMetadata: {}; }",
        },
      },
      "filename": "/app.ui.js",
    },
  ],
  "propertyControlsInfo": Object {
    "/app.ui": Object {},
  },
  "requireFn": [Function],
  "skipDeepFreeze": true,
}
`;
